package librarymanagementsystem;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.GridLayout;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.concurrent.Flow;
import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

public class LoginFrame extends JFrame implements ActionListener {
	private Library library;
	
	private JPanel loginPanel = new JPanel();
	private JLabel loginTitleLbl = new JLabel("Login");
	private JLabel loginIdLbl = new JLabel("ID");
	private JTextField loginIdTxt = new JTextField();
	private JLabel loginPasswordLbl = new JLabel("Password");
	private JPasswordField loginPasswordTxt = new JPasswordField();
	private JButton loginBtn = new JButton("Login");
	
	private JPanel catalogPanel = new JPanel();
	private JTable bookTable = new JTable();
	private JScrollPane bookScrollPane = new JScrollPane(bookTable);
	private DefaultTableModel dtmBook;
	
	public void loadTable(ArrayList<Book> books) {
		bookTable.getTableHeader().setReorderingAllowed(false);
		bookTable.getTableHeader().setResizingAllowed(false);
		bookTable.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
		
		Object[] bookColumn = {"Name", "Author", "Publisher"};
		dtmBook = new DefaultTableModel(bookColumn, 0) {
			@Override
			public boolean isCellEditable(int row, int column) {
				// TODO Auto-generated method stub
				return false;
			}
		};
		
		for(Book book : books) {
			Object[] bookFile = {book.getName(), book.getAuthor(), book.getPublisher()};
			
			dtmBook.addRow(bookFile);
		}
		bookTable.setModel(dtmBook);
	} 
	
	public void init_component(ArrayList<Book> books) {
		
		GridLayout mainLayout = new GridLayout(1, 2);
		mainLayout.setHgap(10);=
		setLayout(mainLayout);
		
		GridBagLayout loginLayout = new GridBagLayout();
		GridBagConstraints loginConst = new GridBagConstraints();
		loginPanel.setLayout(loginLayout);

		// login title
		loginConst.gridx = 0;
		loginConst.gridy = 0;
		loginConst.weightx = 0;
		loginConst.gridwidth = 2;
		loginConst.insets = new Insets(0, 40, 20, 40);
		loginTitleLbl.setFont(new Font("Tahoma", Font.BOLD, 32));
		loginPanel.add(loginTitleLbl, loginConst);
	
		// login id label
		loginConst.gridwidth = 1;
		loginConst.gridy++;
		loginIdLbl.setFont(new Font("Tahoma", Font.PLAIN, 20));
		loginConst.insets = new Insets(5, 40, 10, 40);
		loginPanel.add(loginIdLbl, loginConst);
		
		// login id textfield
		loginConst.gridx++;
		loginConst.weightx = 1;
		loginConst.ipady = 20;
		loginConst.fill = GridBagConstraints.HORIZONTAL;
		loginPanel.add(loginIdTxt, loginConst);

		// login password label
		loginConst.weightx = 0;
		loginConst.gridx = 0;
		loginConst.ipady = 0;
		loginConst.gridy++;
		loginConst.fill = GridBagConstraints.NONE;
		loginPasswordLbl.setFont(new Font("Tahoma", Font.PLAIN, 20));
		loginPanel.add(loginPasswordLbl, loginConst);
		
		// login password textfield
		loginConst.gridx++;
		loginConst.weightx = 1;
		loginConst.ipady = 20;
		loginConst.fill = GridBagConstraints.HORIZONTAL;
		loginPanel.add(loginPasswordTxt, loginConst);
		
		// login button
		loginConst.insets = new Insets(20, 40, 0, 40);
		loginConst.ipady = 0;
		loginConst.gridwidth = 2;
		loginConst.weightx = 0;
		loginConst.ipadx = 50;
		loginConst.fill = GridBagConstraints.NONE;
		loginConst.gridx = 0;
		loginConst.gridy++;
		loginBtn.addActionListener(this);
		loginPanel.add(loginBtn, loginConst);
		
		loginPanel.setBackground(Color.BLUE);
		catalogPanel.setBackground(Color.RED);
		
		// table catalog
		catalogPanel.setLayout(new BorderLayout());
		loadTable(books);
		catalogPanel.add(bookScrollPane, "Center");
		
		add(loginPanel);
		add(catalogPanel);
	}
	
	public LoginFrame(Library library, int width, int height) {
		this.library = library;
		
		init_component(library.getBooks());
		setSize(width, height);
		setTitle("Library Management System");
		setLocationRelativeTo(null);
		setDefaultCloseOperation(EXIT_ON_CLOSE);
		setVisible(true);
	}
	
	public LoginFrame() {
		
	}

	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		if(e.getSource().equals(loginBtn)) {
			String[] account = {loginIdTxt.getText(), String.valueOf(loginPasswordTxt.getPassword())};
			System.out.println(account[1]);
			int result = library.checkAccount(account);
			
			if(result == 1) {
				library.loginAdmin(getContentPane().getSize().width, getContentPane().getSize().height, getLocationOnScreen());
			} else if(result == 2) {
				
			} else{
				JOptionPane.showConfirmDialog(null, 
				"Wrong ID or Password",
				"Login Failed",
				JOptionPane.CLOSED_OPTION,
				JOptionPane.WARNING_MESSAGE);
				
				loginIdTxt.setText("");
				loginPasswordTxt.setText("");
			}
		}
	}
}
