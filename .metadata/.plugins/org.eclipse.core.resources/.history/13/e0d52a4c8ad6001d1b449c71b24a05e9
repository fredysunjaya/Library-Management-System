package librarymanagementsystem;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Scanner;

public class Library {
	LoginFrame loginFrame;
	AdminBookFrame adminBookFrame;

	private ArrayList<Book> books = new ArrayList<>();
	private ArrayList<Member> members = new ArrayList<>();
	private ArrayList<Admin> admins = new ArrayList<>();
	
	public void readBook() {
		File dummyBook = new File("resources/books.txt");
		try {
			Scanner scan = new Scanner(dummyBook);
			
			while(scan.hasNextLine()) {
				String[] line = scan.nextLine().split("#");
				
				books.add(new Book(line[0], line[1], Integer.parseInt(line[2]), Integer.parseInt(line[3]), line[4], line[5], line[6], Integer.parseInt(line[7])));
			}
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void writeBook() {
		File dummyBook = new File("resources/books2.txt");
		
		try {
			FileWriter printer = new FileWriter(dummyBook);

			for(Book book : books) {
				printer.write(String.format("%s#%s#%d#%d#%s#%s#%s\n", book.getName(), book.getAuthor(), book.getPublishYear(), book.getPages(), book.getIsbn(), book.getPublisher(), book.getSynopsis()));	
				System.out.println(book.getName());
			}
			
			printer.close();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void readMember() {
		File dummyMember = new File("resources/members.txt");
		try {
			Scanner scan = new Scanner(dummyMember);
			
			while(scan.hasNextLine()) {
				String[] line = scan.nextLine().split("\"");
				
				members.add(new Member(line[0], line[1], line[2], line[3], line[4], line[5]));
			}
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void writeMember() {
		File dummyMember = new File("resources/members2.txt");
		
		try {
			FileWriter printer = new FileWriter(dummyMember);

			for(Member member : members) {
				printer.write(String.format("%s\"%s\"%s\"%s\"%s\"%s\"%s\n", member.getId(), member.getName(), member.getDateBirth(), member.getEmail(), member.getPhoneNum(), member.getPhoneNum(), member.getPassword()));
			}
			
			printer.close();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public int checkAccount(String[] account) {
		for(Admin admin : admins) {
			System.out.println(admin.getId());
			System.out.println(account[0]);
			if(account[0].equals(admin.getId()) && account[1].equals(admin.getPassword())) {
				return 1;
			}
		}
		
		for(Member member : members) {
			if(account[0].equals(member.getId()) && account[1].equals(member.getPassword())) {
				return 2;
			}
		}
		System.out.println("asd");
		return 0;
	}
	
	public void loginAdmin() {
		loginFrame.dispose();
		adminBookFrame = new AdminBookFrame(this);
		adminBookFrame.init_component(books);
	}
	
	public Library() {
		admins.add(new Admin("ariya", "ariya"));
		admins.add(new Admin("fredy", "fredy"));
		admins.add(new Admin("neisya", "neisya"));
		
		readBook();
		readMember();
		loginFrame = new LoginFrame(this);
		loginFrame.init_component(books);
	}
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		new Library();
	}

}
